<Project>
  <Name>project</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.ClassDiagram" assembly="NClass.DiagramEditor, Version=2.8.0.2, Culture=neutral, PublicKeyToken=null">
    <Name>synthesis </Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>Product</Name>
        <Access>Public</Access>
        <Location left="2510" top="39" />
        <Size width="501" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private string item</Member>
        <Member type="Field">private string unit</Member>
        <Member type="Field">private decimal amount</Member>
        <Member type="Field">private decimal price</Member>
        <Member type="Field">private Category category</Member>
        <Member type="Constructor">public Product(int id, string item, string unit, decimal amount, decimal price, Category category)</Member>
        <Member type="Constructor">public Product(string item, string unit, decimal amount, decimal price, Category category)</Member>
        <Member type="Constructor">public Product(List&lt;Product&gt; products, int id)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Item { get; set; }</Member>
        <Member type="Property">public string Unit { get; set; }</Member>
        <Member type="Property">public decimal Amount { get; set; }</Member>
        <Member type="Property">public decimal Price { get; set; }</Member>
        <Member type="Property">public Category Category { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>User</Name>
        <Access>Public</Access>
        <Location left="10" top="17" />
        <Size width="599" height="383" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private string name</Member>
        <Member type="Field">private string surname</Member>
        <Member type="Field">private string username</Member>
        <Member type="Field">private string password</Member>
        <Member type="Field">private string salt = ""</Member>
        <Member type="Field">private UserRole userRole</Member>
        <Member type="Constructor">public User(int id, string name, string surname, string username, string password, UserRole userRole, string salt)</Member>
        <Member type="Constructor">public User(string name, string surname, string username, string password, UserRole userRole, string salt)</Member>
        <Member type="Constructor">public User()</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Surname { get; set; }</Member>
        <Member type="Property">public string Username { get; set; }</Member>
        <Member type="Property">public string Password { get; set; }</Member>
        <Member type="Property">public UserRole UserRole { get; set; }</Member>
        <Member type="Property">public string Salt { get; set; }</Member>
        <Member type="Method">public bool Login(string password)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProductManager</Name>
        <Access>Public</Access>
        <Location left="2562" top="567" />
        <Size width="264" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public ProductManager()</Member>
        <Member type="Method">public List&lt;Product&gt; GetProducts()</Member>
        <Member type="Method">public void UpdateProductList()</Member>
        <Member type="Method">public void AddProduct(Product product)</Member>
        <Member type="Method">public void DeleteProduct(Product product)</Member>
        <Member type="Method">public void UpdateProduct(Product product)</Member>
        <Member type="Constructor">public ProductManager(IProductDB IproductDB)</Member>
        <Member type="Method">public List&lt;Product&gt; filterProduct(string name)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PeopleManager</Name>
        <Access>Public</Access>
        <Location left="460" top="479" />
        <Size width="307" height="281" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public PeopleManager(IPersonDB IpersonDB)</Member>
        <Member type="Method">public bool LoginUser(string username, string password)</Member>
        <Member type="Method">public User GetLoggedInUser(string username)</Member>
        <Member type="Method">public bool IsUsernameTaken(string username)</Member>
        <Member type="Method">public bool AddUser(User user)</Member>
        <Member type="Method">public List&lt;User&gt; ReadUser()</Member>
        <Member type="Method">public void UpdateUserList()</Member>
        <Member type="Constructor">public PeopleManager()</Member>
        <Member type="Constructor">public PeopleManager()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>UserRole</Name>
        <Access>Public</Access>
        <Location left="90" top="479" />
        <Size width="162" height="117" />
        <Collapsed>False</Collapsed>
        <Value>Admin</Value>
        <Value>Employee</Value>
        <Value>Customer</Value>
      </Entity>
      <Entity type="Class">
        <Name>Order</Name>
        <Access>Public</Access>
        <Location left="678" top="17" />
        <Size width="677" height="400" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private decimal totalPrice</Member>
        <Member type="Field">private DateTime dateOfOrder</Member>
        <Member type="Field">private string status</Member>
        <Member type="Constructor">public Order(int id, User user, List&lt;Product&gt; products, decimal totalPrice, DateTime dateOfOrder, Delivery delivery, string status)</Member>
        <Member type="Constructor">public Order(User user, List&lt;Product&gt; products, decimal totalPrice, DateTime dateOfOrder, Delivery delivery, string status)</Member>
        <Member type="Constructor">public Order(int id, User user, decimal totalPrice, Delivery delivery, string status)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public User User { get; set; }</Member>
        <Member type="Property">public List&lt;Product&gt; Products { get; set; }</Member>
        <Member type="Property">public decimal TotalPrice { get; set; }</Member>
        <Member type="Property">public DateTime DateOfOrder { get; set; }</Member>
        <Member type="Property">public Delivery Delivery { get; set; }</Member>
        <Member type="Property">public string Status { get; set; }</Member>
        <Member type="Method">public void AddProduct(Product product)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OrderManager</Name>
        <Access>Public</Access>
        <Location left="793" top="479" />
        <Size width="307" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public OrderManager()</Member>
        <Member type="Method">public List&lt;Order&gt; GetOrders()</Member>
        <Member type="Method">public List&lt;Delivery&gt; GetAllDeliveries()</Member>
        <Member type="Method">public void UpdateOrderList()</Member>
        <Member type="Method">public void AddDeliveryType(Delivery delivery)</Member>
        <Member type="Method">public void AddOrder(Order order)</Member>
        <Member type="Method">public void AddOrderPickup(Order order)</Member>
        <Member type="Method">public void UpdateOrderStatus(Order order)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Category</Name>
        <Access>Public</Access>
        <Location left="3067" top="39" />
        <Size width="271" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private string name</Member>
        <Member type="Field">List&lt;Category&gt; subCategories</Member>
        <Member type="Constructor">public Category(int id, string name)</Member>
        <Member type="Constructor">public Category(string name)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Method">public void AddSubCategory(Category category)</Member>
        <Member type="Method">private bool checkSubCategory(Category category)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Location</Name>
        <Access>Public</Access>
        <Location left="1413" top="734" />
        <Size width="259" height="221" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private string name</Member>
        <Member type="Field">private string address</Member>
        <Member type="Constructor">public Location(int id, string name, string address)</Member>
        <Member type="Constructor">public Location(string name, string address)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Address { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Delivery</Name>
        <Access>Public</Access>
        <Location left="1534" top="98" />
        <Size width="368" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private int id</Member>
        <Member type="Field">private DateTime dateOfDelivery</Member>
        <Member type="Field">private int hour</Member>
        <Member type="Field">private string minutes</Member>
        <Member type="Constructor">public Delivery(int id, DateTime dateOfDelivery, int hour, string minutes)</Member>
        <Member type="Constructor">public Delivery(DateTime dateOfDelivery, int hour, string minutes)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public DateTime DateOfDelivery { get; set; }</Member>
        <Member type="Property">public int Hour { get; set; }</Member>
        <Member type="Property">public string Minutes { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PickupDelivery</Name>
        <Access>Public</Access>
        <Location left="1413" top="413" />
        <Size width="504" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public PickupDelivery(int id, DateTime dateOfDelivery, int hour, string minutes, Location location)</Member>
        <Member type="Constructor">public PickupDelivery(DateTime dateOfDelivery, int hour, string minutes, Location location)</Member>
        <Member type="Property">public Location Location { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>HomeDelivery</Name>
        <Access>Public</Access>
        <Location left="1946" top="413" />
        <Size width="482" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">private string address</Member>
        <Member type="Constructor">public HomeDelivery(int id, DateTime dateOfDelivery, int hour, string minutes, string address)</Member>
        <Member type="Constructor">public HomeDelivery(DateTime dateOfDelivery, int hour, string minutes, string address)</Member>
        <Member type="Property">public string Address { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LocationManager</Name>
        <Access>Public</Access>
        <Location left="1744" top="734" />
        <Size width="272" height="213" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public LocationManager()</Member>
        <Member type="Method">public List&lt;Location&gt; GetLocations()</Member>
        <Member type="Method">public void UpdateLocationList()</Member>
        <Member type="Method">public void AddLocation(Location location)</Member>
        <Member type="Method">public void DeleteLocation(Location location)</Member>
        <Member type="Method">public void UpdateLocation(Location location)</Member>
        <Member type="Constructor">public LocationManager(ILocationDB IlocationDB1)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CategoryManager</Name>
        <Access>Public</Access>
        <Location left="3067" top="316" />
        <Size width="291" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public CategoryManager()</Member>
        <Member type="Method">public List&lt;Category&gt; GetCategories()</Member>
        <Member type="Method">public void UpdateCategories()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Security</Name>
        <Access>Public</Access>
        <Location left="478" top="1095" />
        <Size width="289" height="126" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public static string GenerateSalt()</Member>
        <Member type="Method">public static string HashPassword(string password, string salt)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProductDB</Name>
        <Access>Public</Access>
        <Location left="2345" top="873" />
        <Size width="355" height="221" />
        <Collapsed>False</Collapsed>
        <Member type="Field">SqlConnection conn</Member>
        <Member type="Field">SqlConnection conn1</Member>
        <Member type="Method">public List&lt;Product&gt; ReadProduct()</Member>
        <Member type="Method">public List&lt;Category&gt; ReadAllCategory()</Member>
        <Member type="Method">private List&lt;Category&gt; ReadAllSubCategory(List&lt;Category&gt; categories)</Member>
        <Member type="Method">public void CreateProduct(Product product)</Member>
        <Member type="Method">public void DeleteProduct(Product product)</Member>
        <Member type="Method">public void UpdateProduct(Product product)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>PersonDB</Name>
        <Access>Public</Access>
        <Location left="363" top="889" />
        <Size width="182" height="168" />
        <Collapsed>False</Collapsed>
        <Member type="Field">SqlConnection conn</Member>
        <Member type="Method">public void CreateUser(User user)</Member>
        <Member type="Method">public List&lt;User&gt; ReadUser()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>OrderDB</Name>
        <Access>Public</Access>
        <Location left="793" top="792" />
        <Size width="325" height="340" />
        <Collapsed>False</Collapsed>
        <Member type="Field">SqlConnection conn</Member>
        <Member type="Method">public List&lt;Order&gt; ReadOrders()</Member>
        <Member type="Method">public List&lt;Order&gt; ReadPickupOrders()</Member>
        <Member type="Method">public void CreateOrder(Order order)</Member>
        <Member type="Method">public void CreateOrderPickup(Order order)</Member>
        <Member type="Method">private int findLastId()</Member>
        <Member type="Method">public void UpdateOrderStatus(Order order)</Member>
        <Member type="Method">public void createOrderProducts(int id, Order order)</Member>
        <Member type="Method">public void createHomeDelivery(HomeDelivery homeDelivery)</Member>
        <Member type="Method">private int findLastHomeDeliveryId()</Member>
        <Member type="Method">private int findLastPickupDeliveryId()</Member>
        <Member type="Method">public void createPickupDelivery(PickupDelivery pickup)</Member>
        <Member type="Method">public List&lt;Delivery&gt; GetAllDeliveries()</Member>
        <Member type="Method">public List&lt;PickupDelivery&gt; ReadLocationDelivery()</Member>
        <Member type="Method">public List&lt;HomeDelivery&gt; ReadHomeDelivery()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>CategoryDB</Name>
        <Access>Public</Access>
        <Location left="3067" top="621" />
        <Size width="374" height="139" />
        <Collapsed>False</Collapsed>
        <Member type="Field">SqlConnection conn</Member>
        <Member type="Method">public List&lt;Category&gt; ReadAllCategory()</Member>
        <Member type="Method">private List&lt;Category&gt; readAllSubCategory(List&lt;Category&gt; categories)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IPersonDB</Name>
        <Access>Public</Access>
        <Location left="40" top="725" />
        <Size width="195" height="101" />
        <Collapsed>False</Collapsed>
        <Member type="Method">List&lt;User&gt; ReadUser()</Member>
        <Member type="Method">void CreateUser(User user)</Member>
      </Entity>
      <Entity type="Class">
        <Name>LocationDB</Name>
        <Access>Public</Access>
        <Location left="1461" top="1015" />
        <Size width="236" height="171" />
        <Collapsed>False</Collapsed>
        <Member type="Field">SqlConnection conn</Member>
        <Member type="Method">public List&lt;Location&gt; ReadLocations()</Member>
        <Member type="Method">public void CreateLocation(Location location)</Member>
        <Member type="Method">public void DeleteLocation(Location location)</Member>
        <Member type="Method">public void UpdateLocation(Location location)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IProductDB</Name>
        <Access>Public</Access>
        <Location left="2664" top="1115" />
        <Size width="238" height="192" />
        <Collapsed>False</Collapsed>
        <Member type="Method">List&lt;Product&gt; ReadProduct()</Member>
        <Member type="Method">List&lt;Category&gt; ReadAllCategory()</Member>
        <Member type="Method">List&lt;Category&gt; ReadAllSubCategory()</Member>
        <Member type="Method">void CreateProduct()</Member>
        <Member type="Method">void DeleteProduct()</Member>
        <Member type="Method">void UpdateProduct()</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILocationDB</Name>
        <Access>Public</Access>
        <Location left="1955" top="1010" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">List&lt;Location&gt; ReadLocations()</Member>
        <Member type="Method">void CreateLocation()</Member>
        <Member type="Method">void DeleteLocation()</Member>
      </Entity>
    </Entities>
    <Containers />
    <Relationships>
      <Relationship type="Generalization" first="10" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1702</X>
          <Y>388</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="11" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1974</X>
          <Y>388</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1701</X>
          <Y>371</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="16" second="19">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>290</X>
          <Y>801</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="1" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="6" second="17">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>957</X>
          <Y>767</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="3" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>534</X>
          <Y>441</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="6" second="5">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="12" second="8">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="2" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="13" second="7">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3203</X>
          <Y>305</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="13" second="18">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>3223</X>
          <Y>582</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="6" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1126</X>
          <Y>569</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1390</X>
          <Y>347</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1387</X>
          <Y>76</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>*</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1393</X>
          <Y>175</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="5" second="1">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>653</X>
          <Y>112</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <StartMultiplicity>0..*</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="15" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="3" second="19">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="3" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="12" second="22">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="20" second="22">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="10" second="8">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="2" second="21">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Dependency" first="0" second="7">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>